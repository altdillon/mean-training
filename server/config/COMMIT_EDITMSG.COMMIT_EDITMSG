Communiacting with server but not correctly authenicating

# --------------
# Please enter the commit message for your changes. Everything below
# this paragraph is ignored, and an empty message aborts the commit.
# Just close the window to accept your message.
diff --git a/index.html b/index.html
deleted file mode 100644
index e69de29..0000000
diff --git a/meanapp.sublime-project b/meanapp.sublime-project
new file mode 100644
index 0000000..9cbd597
--- /dev/null
+++ b/meanapp.sublime-project
@@ -0,0 +1,9 @@
+{
+	"folders":
+	[
+		{
+			"follow_symlinks": true,
+			"path": "."
+		}
+	]
+}
diff --git a/meanapp.sublime-workspace b/meanapp.sublime-workspace
new file mode 100644
index 0000000..afb9255
--- /dev/null
+++ b/meanapp.sublime-workspace
@@ -0,0 +1,532 @@
+{
+	"auto_complete":
+	{
+		"selected_items":
+		[
+			[
+				"fun",
+				"function"
+			],
+			[
+				"mv",
+				"mvAuth"
+			],
+			[
+				"ty",
+				"type"
+			],
+			[
+				"use",
+				"username"
+			],
+			[
+				"re",
+				"resolve"
+			],
+			[
+				"resol",
+				"dns.resolve"
+			],
+			[
+				"fa",
+				"factory	AngularJS"
+			],
+			[
+				"a",
+				"app"
+			],
+			[
+				"ma",
+				"maNotifier"
+			],
+			[
+				"col",
+				"col-md-"
+			]
+		]
+	},
+	"buffers":
+	[
+		{
+			"file": "public/app/account/maNavbarLoginCtrl.js",
+			"settings":
+			{
+				"buffer_size": 486,
+				"line_ending": "Unix"
+			}
+		},
+		{
+			"file": "server/includes/scripts.jade",
+			"settings":
+			{
+				"buffer_size": 733,
+				"line_ending": "Unix"
+			}
+		},
+		{
+			"file": "public/app/account/maAuth.js",
+			"settings":
+			{
+				"buffer_size": 497,
+				"line_ending": "Unix"
+			}
+		},
+		{
+			"file": "public/css/site.styl",
+			"settings":
+			{
+				"buffer_size": 416,
+				"line_ending": "Unix"
+			}
+		},
+		{
+			"file": "public/app/account/navbar-login.jade",
+			"settings":
+			{
+				"buffer_size": 391,
+				"line_ending": "Unix"
+			}
+		},
+		{
+			"file": "server.js",
+			"settings":
+			{
+				"buffer_size": 1267,
+				"line_ending": "Unix"
+			}
+		},
+		{
+			"file": "public/app/account/maIdentity.js",
+			"settings":
+			{
+				"buffer_size": 165,
+				"line_ending": "Unix",
+				"name": "angular"
+			}
+		},
+		{
+			"file": "public/app/common/maNotifier.js",
+			"settings":
+			{
+				"buffer_size": 222,
+				"line_ending": "Unix"
+			}
+		}
+	],
+	"build_system": "",
+	"command_palette":
+	{
+		"height": 392.0,
+		"selected_items":
+		[
+			[
+				"pa",
+				"Package Control: Install Package"
+			],
+			[
+				"pack",
+				"Package Control: Install Package"
+			],
+			[
+				"",
+				"Package Control: Remove Package"
+			],
+			[
+				"pac",
+				"Package Control: Install Package"
+			],
+			[
+				"packa",
+				"Package Control: Install Package"
+			]
+		],
+		"width": 530.0
+	},
+	"console":
+	{
+		"height": 126.0,
+		"history":
+		[
+			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
+		]
+	},
+	"distraction_free":
+	{
+		"menu_visible": true,
+		"show_minimap": false,
+		"show_open_files": false,
+		"show_tabs": false,
+		"side_bar_visible": false,
+		"status_bar_visible": false
+	},
+	"expanded_folders":
+	[
+		"/Users/Matt/Dropbox/Personal/Training/mean",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public/app",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public/app/account",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public/app/common",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public/app/main",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public/css",
+		"/Users/Matt/Dropbox/Personal/Training/mean/server",
+		"/Users/Matt/Dropbox/Personal/Training/mean/server/config",
+		"/Users/Matt/Dropbox/Personal/Training/mean/server/includes"
+	],
+	"file_history":
+	[
+		"/Users/Matt/Dropbox/Personal/Training/mean/server/includes/scripts.jade",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public/css/site.styl",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public/app/main/new-courses.jade",
+		"/Users/Matt/Dropbox/Personal/Training/mean/server.js",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public/app/main/featured-courses.jade",
+		"/Users/Matt/Dropbox/Personal/Training/mean/public/app/app.js",
+		"/Users/Matt/Dropbox/Personal/Training/mean/untitled.sublime-project"
+	],
+	"find":
+	{
+		"height": 0.0
+	},
+	"find_in_files":
+	{
+		"height": 0.0,
+		"where_history":
+		[
+		]
+	},
+	"find_state":
+	{
+		"case_sensitive": false,
+		"find_history":
+		[
+		],
+		"highlight": true,
+		"in_selection": false,
+		"preserve_case": false,
+		"regex": false,
+		"replace_history":
+		[
+		],
+		"reverse": false,
+		"show_context": true,
+		"use_buffer2": true,
+		"whole_word": false,
+		"wrap": true
+	},
+	"groups":
+	[
+		{
+			"selected": 2,
+			"sheets":
+			[
+				{
+					"buffer": 0,
+					"file": "public/app/account/maNavbarLoginCtrl.js",
+					"semi_transient": false,
+					"settings":
+					{
+						"buffer_size": 486,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								208,
+								208
+							]
+						],
+						"settings":
+						{
+							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
+						},
+						"translation.x": 0.0,
+						"translation.y": 0.0,
+						"zoom_level": 1.0
+					},
+					"stack_index": 2,
+					"type": "text"
+				},
+				{
+					"buffer": 1,
+					"file": "server/includes/scripts.jade",
+					"semi_transient": false,
+					"settings":
+					{
+						"buffer_size": 733,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								720,
+								720
+							]
+						],
+						"settings":
+						{
+							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage"
+						},
+						"translation.x": 0.0,
+						"translation.y": 0.0,
+						"zoom_level": 1.0
+					},
+					"stack_index": 1,
+					"type": "text"
+				},
+				{
+					"buffer": 2,
+					"file": "public/app/account/maAuth.js",
+					"semi_transient": false,
+					"settings":
+					{
+						"buffer_size": 497,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								393,
+								393
+							]
+						],
+						"settings":
+						{
+							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
+						},
+						"translation.x": 0.0,
+						"translation.y": 0.0,
+						"zoom_level": 1.0
+					},
+					"stack_index": 0,
+					"type": "text"
+				},
+				{
+					"buffer": 3,
+					"file": "public/css/site.styl",
+					"semi_transient": false,
+					"settings":
+					{
+						"buffer_size": 416,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								416,
+								416
+							]
+						],
+						"settings":
+						{
+							"syntax": "Packages/Stylus/Stylus.tmLanguage",
+							"tab_size": 4,
+							"translate_tabs_to_spaces": true
+						},
+						"translation.x": 0.0,
+						"translation.y": 0.0,
+						"zoom_level": 1.0
+					},
+					"stack_index": 6,
+					"type": "text"
+				},
+				{
+					"buffer": 4,
+					"file": "public/app/account/navbar-login.jade",
+					"semi_transient": false,
+					"settings":
+					{
+						"buffer_size": 391,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								80,
+								80
+							]
+						],
+						"settings":
+						{
+							"syntax": "Packages/Jade/Syntaxes/Jade.tmLanguage"
+						},
+						"translation.x": 0.0,
+						"translation.y": 0.0,
+						"zoom_level": 1.0
+					},
+					"stack_index": 4,
+					"type": "text"
+				},
+				{
+					"buffer": 5,
+					"file": "server.js",
+					"semi_transient": false,
+					"settings":
+					{
+						"buffer_size": 1267,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								922,
+								922
+							]
+						],
+						"settings":
+						{
+							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
+							"tab_size": 4,
+							"translate_tabs_to_spaces": true
+						},
+						"translation.x": 0.0,
+						"translation.y": 46.0,
+						"zoom_level": 1.0
+					},
+					"stack_index": 7,
+					"type": "text"
+				},
+				{
+					"buffer": 6,
+					"file": "public/app/account/maIdentity.js",
+					"semi_transient": false,
+					"settings":
+					{
+						"buffer_size": 165,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								164,
+								164
+							]
+						],
+						"settings":
+						{
+							"auto_name": "angular",
+							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
+						},
+						"translation.x": 0.0,
+						"translation.y": 0.0,
+						"zoom_level": 1.0
+					},
+					"stack_index": 3,
+					"type": "text"
+				},
+				{
+					"buffer": 7,
+					"file": "public/app/common/maNotifier.js",
+					"semi_transient": false,
+					"settings":
+					{
+						"buffer_size": 222,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								79,
+								79
+							]
+						],
+						"settings":
+						{
+							"auto_name": "",
+							"syntax": "Packages/JavaScript/JavaScript.tmLanguage"
+						},
+						"translation.x": 0.0,
+						"translation.y": 0.0,
+						"zoom_level": 1.0
+					},
+					"stack_index": 5,
+					"type": "text"
+				}
+			]
+		}
+	],
+	"incremental_find":
+	{
+		"height": 0.0
+	},
+	"input":
+	{
+		"height": 31.0
+	},
+	"layout":
+	{
+		"cells":
+		[
+			[
+				0,
+				0,
+				1,
+				1
+			]
+		],
+		"cols":
+		[
+			0.0,
+			1.0
+		],
+		"rows":
+		[
+			0.0,
+			1.0
+		]
+	},
+	"menu_visible": true,
+	"output.find_results":
+	{
+		"height": 0.0
+	},
+	"project": "meanapp.sublime-project",
+	"replace":
+	{
+		"height": 0.0
+	},
+	"save_all_on_build": true,
+	"select_file":
+	{
+		"height": 0.0,
+		"selected_items":
+		[
+		],
+		"width": 0.0
+	},
+	"select_project":
+	{
+		"height": 0.0,
+		"selected_items":
+		[
+		],
+		"width": 0.0
+	},
+	"select_symbol":
+	{
+		"height": 0.0,
+		"selected_items":
+		[
+		],
+		"width": 0.0
+	},
+	"selected_group": 0,
+	"settings":
+	{
+	},
+	"show_minimap": true,
+	"show_open_files": false,
+	"show_tabs": true,
+	"side_bar_visible": true,
+	"side_bar_width": 247.0,
+	"status_bar_visible": true,
+	"template_settings":
+	{
+	}
+}
diff --git a/package.json b/package.json
index 74ad262..cf893d3 100644
--- a/package.json
+++ b/package.json
@@ -10,6 +10,7 @@
   "license": "ISC",
   "dependencies": {
     "body-parser": "^1.12.0",
+    "connect": "^3.3.4",
     "cookie-parser": "^1.3.4",
     "express": "^4.12.0",
     "express-session": "^1.10.3",
diff --git a/public/app/account/maAuth.js b/public/app/account/maAuth.js
new file mode 100644
index 0000000..363c9cc
--- /dev/null
+++ b/public/app/account/maAuth.js
@@ -0,0 +1 @@
+angular.module('app').factory('maAuth', function($http, maIdentity, $q){	return {		authenticateUser: function(username, password) {			var dfd = $q.defer();			$http.post('/login', {username:username, password:password}).success(function(data, status, headers, config) {				maIdentity.currentUser = data.user;				console.log(data.user);				console.log(maIdentity.currentUser);	            dfd.resolve(true);			}).error(function(data, status, headers, config) {				dfd.resolve(false);			});				/*then(function(response) {	            if(response.data.success) {	            	maIdentity.currentUser = response.data.user;	            	dfd.resolve(true);		        } else {					dfd.resolve(false);	            }*/	        return dfd.promise;		}	};})
\ No newline at end of file
diff --git a/public/app/account/maIdentity.js b/public/app/account/maIdentity.js
new file mode 100644
index 0000000..ad10f74
--- /dev/null
+++ b/public/app/account/maIdentity.js
@@ -0,0 +1,8 @@
+angular.module('app').factory('maIdentity', function(){
+	return {
+		currentUser: undefined,
+		isAuthenticated: function () {
+			return !!this.currentUser;
+		}
+	};
+})
\ No newline at end of file
diff --git a/public/app/account/maNavbarLoginCtrl.js b/public/app/account/maNavbarLoginCtrl.js
index 4e259a9..df2640a 100644
--- a/public/app/account/maNavbarLoginCtrl.js
+++ b/public/app/account/maNavbarLoginCtrl.js
@@ -1,11 +1,14 @@
-angular.module('app').controller('maNavbarLoginCtrl', function($scope, $http) {
-    $scope.signin = function (username, password) {
-        $http.post('/login', {username:username, password:password}).then(function(response) {
-            if(response.data.success) {
-                console.log('Logged In!');
-            } else {
-                console.log('failed to Log in');
-            }
+angular.module('app').controller('maNavbarLoginCtrl', function($scope, $http, maIdentity, maNotifier, maAuth) {
+    $scope.identity = maIdentity;
+    $scope.signin = signin;
+
+    function signin(username, password) {
+        maAuth.authenticateUser(username, password).then(function(success){
+        	if (success) {
+        		maNotifier.notify('You have successfully signed in!');
+        	} else {
+        		maNotifier.notify('Username / password combination incorrect')
+        	}
         });
-    }
+    };
 });
diff --git a/public/app/account/navbar-login.jade b/public/app/account/navbar-login.jade
index 9028bac..a080120 100644
--- a/public/app/account/navbar-login.jade
+++ b/public/app/account/navbar-login.jade
@@ -1,5 +1,5 @@
 .navbar-right(ng-controller="maNavbarLoginCtrl")
-    form.navbar-form
+    form.navbar-form(ng-hide='!identity.isAuthenticated')
         .form-group
             input.form-control(placeholder="Email", ng-model="username")
         .form-group
diff --git a/public/app/common/maNotifier.js b/public/app/common/maNotifier.js
new file mode 100644
index 0000000..261a897
--- /dev/null
+++ b/public/app/common/maNotifier.js
@@ -0,0 +1,10 @@
+angular.module('app').value('maToastr', toastr);
+
+angular.module('app').factory('maNotifier', ['maToastr', function(maToastr){
+	return {
+		notify: function (msg) {
+			maToastr.success(msg);
+			console.log(msg);
+		}
+	}
+}]);
\ No newline at end of file
diff --git a/public/css/site.css b/public/css/site.css
index edc2a21..312bc1f 100644
--- a/public/css/site.css
+++ b/public/css/site.css
@@ -21,3 +21,9 @@ footer p {
 .navbar-form button {
   margin-left: 10px;
 }
+.toast-top-right {
+  top: 70px;
+}
+.toast-success {
+  background-color: #13987e;
+}
diff --git a/public/css/site.styl b/public/css/site.styl
index 38aec8e..6e1c0e7 100644
--- a/public/css/site.styl
+++ b/public/css/site.styl
@@ -17,4 +17,11 @@ footer
     .form-group
         margin-left 10px
     button
-        margin-left 10px
\ No newline at end of file
+        margin-left 10px
+
+.toast-top-right
+    top 70px
+
+.toast-success
+    background-color: #13987e
+    
diff --git a/server.js b/server.js
index 97e1aa8..3872ce3 100644
--- a/server.js
+++ b/server.js
@@ -18,10 +18,13 @@ require('./server/config/express')(app, config);
 
 require('./server/config/mongoose')(config);
 
-var User = mongoose.model('User');
 passport.use(new LocalStrategy(
     function(username, password, done) {
-        User.findOne({username:username}).exec(function(err, user) {
+        console.log(User);
+        console.log(username);
+
+        User.findById(id, function(err, user) {
+            if (err) {return done(err);}
             if (user) {
                 return done(null, user);
             } else {
@@ -37,8 +40,8 @@ passport.serializeUser(function(user, done) {
     }
 });
 
-passport.deserializeUser (function(user, done) {
-    User.findOne({_id:id}).exec(function(err,user) {
+passport.deserializeUser(function(id, done) {
+    User.findById(id, function(err,user) {
         if(user) {
             return done(null, user);
         } else {
@@ -47,8 +50,16 @@ passport.deserializeUser (function(user, done) {
     })
 });
 
+/*
+
+User.findById(id, function(err, user){
+        done(err, user);
+    })
+*/
+
 require('./server/config/routes')(app);
 
+
 // Server initialization
 
 app.listen(config.port);
diff --git a/server/config/express.js b/server/config/express.js
index 4ed7bb4..5c757c6 100644
--- a/server/config/express.js
+++ b/server/config/express.js
@@ -1,10 +1,11 @@
-var express = require('express'),
+  var express = require('express'),
     stylus = require('stylus'),
     logger = require('morgan'),
     bodyParser = require('body-parser'),
     cookieParser = require('cookie-parser'),
     session = require('express-session'),
-    passport = require('passport');
+    passport = require('passport'),
+    errorHandler = require('errorhandler');
 
 module.exports = function (app, config) {
     function compile(str, path) {
@@ -22,9 +23,10 @@ module.exports = function (app, config) {
     app.use(session({secret: 'multi vision unicorns',resave:false,saveUninitialized:false}));
     app.use(passport.initialize());
     app.use(passport.session());
+    app.use(errorHandler({ dumpExceptions: true, showStack: true }));
     app.use(stylus.middleware({
         src: config.rootPath + '/public',
         compile: compile
     }));
-    app.use(express.static(config.rootPath + '/public'));
-}
+    app.use(express.static(config.rootPath + '/public'));  
+};
diff --git a/server/config/mongoose.js b/server/config/mongoose.js
index f523370..fad637c 100644
--- a/server/config/mongoose.js
+++ b/server/config/mongoose.js
@@ -5,15 +5,20 @@ module.exports = function (config) {
     var db = mongoose.connection;
     db.on('error', console.error.bind(console, 'connection error...'));
     db.once('open', function callback() {
-        console.log('meanapp db opened');
+        console.log('Meanapp db opened');
     });
 
+    // Setup User model
+
     var userSchema = mongoose.Schema({
         firstName: String,
         lastName: String,
         username: String
     });
     var User = mongoose.model('User', userSchema);
+
+    // Ensure intial data is present
+
     User.find({}).exec(function(err, collection) {
         if (collection.length === 0)
         {
@@ -21,5 +26,5 @@ module.exports = function (config) {
             User.create({firstName:'Benjamin',lastName:'Heberlein',username:'ben'});
             User.create({firstName:'Anthony',lastName:'DeCamillis',username:'deco'});
         }
-    })
+    });
 };
diff --git a/server/config/routes.js b/server/config/routes.js
index 2b91044..9de1431 100644
--- a/server/config/routes.js
+++ b/server/config/routes.js
@@ -6,16 +6,28 @@ module.exports = function (app) {
     });
 
     app.post('/login', function(req, res, next) {
-        var auth  = passport.authenticate('local', function(err, user) {
-            if (err) {return next(err)};
-            if (!user) { res.send({success:false}); }
-            req.logIn(user, function (err) {
-                if (err) { return next(err);}
-                res.send({success:true, user:user});
-            });
+        console.log(req.body.username);
+        passport.authenticate('local', function(err, user, info) {
+            if (err) { return next(err); }
+            if (!user) { return res.send({success:false}); }
+            req.logIn(user, function(err) {
+              if (err) { return next(err); }
+              return res.send({success:true, user:user});
+          });
+        })(req, res, next);
+    });
+
+    /*
+    var auth  = passport.authenticate('local', function(err, user) {
+        if (err) {return next(err)};
+        if (!user) { res.send({success:false}); }
+        req.logIn(user, function (err) {
+            if (err) { return next(err)};
+            res.send({success:true, user:user});
         });
-        auth(req, res, next);
     });
+    auth(req, res, next);
+    */
 
     app.get('*', function (req, res) {
         res.render('index');
diff --git a/server/includes/scripts.jade b/server/includes/scripts.jade
index d7ce267..38cbbe5 100644
--- a/server/includes/scripts.jade
+++ b/server/includes/scripts.jade
@@ -2,9 +2,13 @@ script(type="text/javascript", src="/vendor/jquery/dist/jquery.js")
 script(type="text/javascript", src="/vendor/angular/angular.js")
 script(type="text/javascript", src="/vendor/angular-resource/angular-resource.js")
 script(type="text/javascript", src="/vendor/angular-route/angular-route.js")
+script(type="text/javascript", src="/vendor/toastr/toastr.js")
 script(type="text/javascript", src="/app/app.js")
 script(type="text/javascript", src="/app/main/maMainCtrl.js")
 script(type="text/javascript", src="/app/account/maNavbarLoginCtrl.js")
+script(type="text/javascript", src="/app/account/maIdentity.js")
+script(type="text/javascript", src="/app/common/maNotifier.js")
+script(type="text/javascript", src="/app/account/maAuth.js")
 
 
 
diff --git a/untitled.sublime-workspace b/untitled.sublime-workspace
new file mode 100644
index 0000000..ae05aea
--- /dev/null
+++ b/untitled.sublime-workspace
@@ -0,0 +1,211 @@
+{
+	"auto_complete":
+	{
+		"selected_items":
+		[
+			[
+				"re",
+				"require"
+			]
+		]
+	},
+	"buffers":
+	[
+		{
+			"contents": "// Includes\n\nvar express = require('express'),\n    mongoose = require('mongoose'),\n    passport = require('passport'),\n    LocalStrategy = require('passport-local').Strategy;\n\n\n// Server config\n\nvar env = process.env.NODE_ENV = process.env.NODE_ENV || 'development';\n\nvar app = express();\n\nvar config = require('./server/config/config')[env];\n\nrequire('./server/config/express')(app, config);\n\nrequire('./server/config/mongoose')(config);\n\nvar User = mongoose.model('User');\npassport.use(new LocalStrategy(\n    function(username, password, done) {\n        User.findOne({username:username}).exec(function(err, user) {\n            if (user) {\n                return done(null, user);\n            } else {\n                return done(null, false);\n            }\n        });\n    }\n));\n\npassport.serializeUser(function(user, done) {\n    if (user) {\n        done (null, user.id);\n    }\n});\n\npassport.deserializeUser (function(user, done) {\n    User.findOne({_id:id}).exec(function(err,user) {\n        if(user) {\n            return done(null, user);\n        } else {\n            return done(null, false);\n        }\n    })\n});\n\nrequire('./server/config/routes')(app);\n\n// Server initialization\n\napp.listen(config.port);\nconsole.log('listening on port ' + config.port + '...');\n",
+			"file": "server.js",
+			"file_size": 1269,
+			"file_write_time": 130693370450000000,
+			"settings":
+			{
+				"buffer_size": 1269,
+				"line_ending": "Unix"
+			}
+		}
+	],
+	"build_system": "",
+	"command_palette":
+	{
+		"height": 392.0,
+		"selected_items":
+		[
+			[
+				"pack",
+				"Package Control: Add Repository"
+			]
+		],
+		"width": 449.0
+	},
+	"console":
+	{
+		"height": 126.0,
+		"history":
+		[
+			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
+		]
+	},
+	"distraction_free":
+	{
+		"menu_visible": true,
+		"show_minimap": false,
+		"show_open_files": false,
+		"show_tabs": false,
+		"side_bar_visible": false,
+		"status_bar_visible": false
+	},
+	"expanded_folders":
+	[
+		"/Users/Matt/Dropbox/Personal/Training/mean"
+	],
+	"file_history":
+	[
+		"/Users/Matt/Dropbox/Personal/Training/mean/untitled.sublime-project"
+	],
+	"find":
+	{
+		"height": 0.0
+	},
+	"find_in_files":
+	{
+		"height": 0.0,
+		"where_history":
+		[
+		]
+	},
+	"find_state":
+	{
+		"case_sensitive": false,
+		"find_history":
+		[
+		],
+		"highlight": true,
+		"in_selection": false,
+		"preserve_case": false,
+		"regex": false,
+		"replace_history":
+		[
+		],
+		"reverse": false,
+		"show_context": true,
+		"use_buffer2": true,
+		"whole_word": false,
+		"wrap": true
+	},
+	"groups":
+	[
+		{
+			"selected": 0,
+			"sheets":
+			[
+				{
+					"buffer": 0,
+					"file": "server.js",
+					"semi_transient": false,
+					"settings":
+					{
+						"buffer_size": 1269,
+						"regions":
+						{
+						},
+						"selection":
+						[
+							[
+								288,
+								288
+							]
+						],
+						"settings":
+						{
+							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
+							"tab_size": 4,
+							"translate_tabs_to_spaces": true
+						},
+						"translation.x": 0.0,
+						"translation.y": 46.0,
+						"zoom_level": 1.0
+					},
+					"stack_index": 0,
+					"type": "text"
+				}
+			]
+		}
+	],
+	"incremental_find":
+	{
+		"height": 0.0
+	},
+	"input":
+	{
+		"height": 31.0
+	},
+	"layout":
+	{
+		"cells":
+		[
+			[
+				0,
+				0,
+				1,
+				1
+			]
+		],
+		"cols":
+		[
+			0.0,
+			1.0
+		],
+		"rows":
+		[
+			0.0,
+			1.0
+		]
+	},
+	"menu_visible": true,
+	"output.find_results":
+	{
+		"height": 0.0
+	},
+	"project": "untitled.sublime-project",
+	"replace":
+	{
+		"height": 0.0
+	},
+	"save_all_on_build": true,
+	"select_file":
+	{
+		"height": 0.0,
+		"selected_items":
+		[
+		],
+		"width": 0.0
+	},
+	"select_project":
+	{
+		"height": 0.0,
+		"selected_items":
+		[
+		],
+		"width": 0.0
+	},
+	"select_symbol":
+	{
+		"height": 0.0,
+		"selected_items":
+		[
+		],
+		"width": 0.0
+	},
+	"selected_group": 0,
+	"settings":
+	{
+	},
+	"show_minimap": true,
+	"show_open_files": false,
+	"show_tabs": true,
+	"side_bar_visible": true,
+	"side_bar_width": 150.0,
+	"status_bar_visible": true,
+	"template_settings":
+	{
+	}
+}